# zmodload zsh/zprof # Uncomment to profile zsh startup

# Antidote plugin manager
source ~/.antidote/antidote.zsh
antidote load ~/.zsh_plugins.txt

# Editor
export EDITOR="nvim"

# PATHs
if [[ "$OSTYPE" == "darwin"* ]]; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
fi

export PATH="$HOME/bin:$PATH"

if [[ "$OSTYPE" == "darwin"* && -d "$HOME/.docker/completions" ]]; then
  fpath=("$HOME/.docker/completions" $fpath)
fi

# Load zoxide before fzf-tab
command -V zoxide >/dev/null && eval "$(zoxide init zsh)"

# Prompt
command -V starship >/dev/null && eval "$(starship init zsh)"

# Aliases
alias zshconf="nvim ~/.zshrc"
alias zshsrc="source ~/.zshrc"
alias hyprconf="nvim ~/.config/hypr/hyprland.conf"
alias nixconf="nvim ~/.config/nix/flake.nix"
alias ls='eza --icons --group-directories-first'
alias la='ls -la'
alias cat='bat'
alias cd='z'
alias cdi='zi'
alias sysupdate="cd ~/.config/nix/ && sudo determinate-nixd upgrade && nix flake update && sudo darwin-rebuild switch --flake ~/.config/nix && antidote update && chezmoi re-add && cd -"
alias pyinit='bash ~/config-repo/pyinit.sh'
alias syncrc='cd ~/config-repo && git add . && git commit -m "update conf files" && git push'
alias ndir='cd ~/.config/nvim/'
alias cdir='cd ~/config-repo/'
alias nixdir='cd ~/.config/nix/'
alias ga='cd ~/Documents/Global\ Alumni/'
alias desci='cd ~/Documents/DeSciWorld/'
alias tkill='tmux kill-server'
alias rq='sesh connect .'
alias config='sesh connect config'
alias db='sesh connect db'
alias lg='lazygit'
alias lzd='lazydocker'
alias airbyte='ssh -L 8000:localhost:8000 airbyte'
alias nerdssh="ssh -i ~/.ssh/pems/RicardoSSH.pem ubuntu@15.237.174.231"
alias glow="glow -s ~/config-repo/catppuccin.json"
alias ccd='chezmoi cd'
alias cra='chezmoi re-add'
alias cs='chezmoi status'
alias ca='chezmoi apply'
alias rqshell='nix develop ~/.config/nix'
alias nixgc='sudo nix-collect-garbage -d'

# DB Tunnel Aliases
alias db-soa-tunneler='source ~/scripts/ssm-db-tunneler.sh santander eu-west-1 campus-soa san-postgre-2-instance-1-eu-west-1c.cg5xawbcvl2m.eu-west-1.rds.amazonaws.com 5432 5432'
alias db-soa-tunneler-writer='source ~/scripts/ssm-db-tunneler.sh santander eu-west-1 campus-soa san-postgre-2.cluster-cg5xawbcvl2m.eu-west-1.rds.amazonaws.com 5432 5432'
alias db-sx-tunneler='source ~/scripts/ssm-db-tunneler.sh santander eu-west-1 campus-santander-x campus-santander-x-instance-1-eu-west-1a.cg5xawbcvl2m.eu-west-1.rds.amazonaws.com 5432 5432'
alias db-santander-ucpe-tunneler='source ~/scripts/ssm-db-tunneler.sh old_ga eu-west-1 Campus_Santander_UCPE localhost 5432 5432'

# functions
function jupyconv() { jupytext --to py:percent "$1"; }

function sesh-sessions() {
  {
    exec </dev/tty
    exec <&1
    local session
    session=$(sesh list -t -c | fzf --height 40% --reverse --border-label ' sesh ' --border --prompt 'âš¡  ')
    zle reset-prompt > /dev/null 2>&1 || true
    [[ -z "$session" ]] && return
    sesh connect $session
  }
}
zle     -N             sesh-sessions
bindkey -M emacs '\es' sesh-sessions
bindkey -M vicmd '\es' sesh-sessions
bindkey -M viins '\es' sesh-sessions

# Completions
autoload -Uz compinit
zsh-defer -t 0.5 compinit

# FZF + fd setup
export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="fd --type=d --hidden --strip-cwd-prefix --exclude .git"
_fzf_compgen_path() { fd --hidden --exclude .git . "$1" }
_fzf_compgen_dir() { fd --type=d --hidden --exclude .git . "$1" }

# fzf theme
export FZF_DEFAULT_OPTS=" \
--color=bg+:#313244,bg:-1,spinner:#f5e0dc,hl:#f38ba8 \
--color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc \
--color=marker:#b4befe,fg+:#cdd6f4,prompt:#cba6f7,hl+:#f38ba8 \
--color=selected-bg:#45475a \
--color=border:#313244,label:#cdd6f4"

# fzf tab setup
zstyle ':completion:*:git-checkout:*' sort false
zstyle ':completion:*:descriptions' format '[%d]'
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' menu no
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1 --color=always $realpath'
zstyle ':fzf-tab:*' fzf-flags --color=fg:blue,fg+:2 --bind=enter:accept
zstyle ':fzf-tab:*' use-fzf-default-opts yes
zstyle ':fzf-tab:*' switch-group '<' '>'

# Full fzf shell integration (keybindings + completion)
source ~/config-repo/key-bindings.zsh
source ~/config-repo/completion.zsh

# yazi integration
function e() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

# Visual feedback for completions
COMPLETION_WAITING_DOTS="true"

command -v atuin >/dev/null && eval "$(atuin init zsh --disable-up-arrow)"

# zprof # Uncomment to profile zsh startup
